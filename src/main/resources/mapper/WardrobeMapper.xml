<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xidian.meiping.dao.WardrobeMapper" >
  <resultMap id="BaseResultMap" type="com.xidian.meiping.entity.Wardrobe" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="rend_wardrobe_log_id" property="rendWardrobeLogId" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="member_name" property="memberName" jdbcType="VARCHAR" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    wardrobe.id, wardrobe.name, wardrobe.status, wardrobe.rend_wardrobe_log_id,wardrobe.member_id, wardrobe.price,
    rwl.end_time as end_time,member.name as member_name,wardrobe.start_time
  </sql>
  <select id="selectAll"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from wardrobe
    left join rend_wardrobe_log as rwl on rwl.id=wardrobe.rend_wardrobe_log_id
    left join member on member.id = wardrobe.member_id
  </select>
  <select id="selectByMemberId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from wardrobe
    left join rend_wardrobe_log as rwl on rwl.id=wardrobe.rend_wardrobe_log_id
    left join member on member.id = wardrobe.member_id
    where wardrobe.member_id = #{memberId,jdbcType=INTEGER}
  </select>
  <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from wardrobe
    left join rend_wardrobe_log as rwl on rwl.id=wardrobe.rend_wardrobe_log_id
    left join member on member.id = wardrobe.member_id
    where wardrobe.name = #{name,jdbcType=VARCHAR}
  </select>
  <select id="selectByStatus" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from wardrobe
    left join rend_wardrobe_log as rwl on rwl.id=wardrobe.rend_wardrobe_log_id
    left join member on member.id = wardrobe.member_id
    where wardrobe.status = #{status,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from wardrobe
    left join rend_wardrobe_log as rwl on rwl.id=wardrobe.rend_wardrobe_log_id
    left join member on member.id = wardrobe.member_id
    where wardrobe.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from wardrobe
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xidian.meiping.entity.Wardrobe"
          useGeneratedKeys="true" keyProperty="id">
    insert into wardrobe (id, name, status, 
      rend_wardrobe_log_id,member_id,price,start_time)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{rendWardrobeLogId,jdbcType=INTEGER},#{memberId,jdbcType=INTEGER},
      #{price,jdbcType=DOUBLE},#{startTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xidian.meiping.entity.Wardrobe" >
    insert into wardrobe
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="rendWardrobeLogId != null" >
        rend_wardrobe_log_id,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="rendWardrobeLogId != null" >
        #{rendWardrobeLogId,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xidian.meiping.entity.Wardrobe" >
    update wardrobe
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="rendWardrobeLogId != null" >
        rend_wardrobe_log_id = #{rendWardrobeLogId,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByMemberId" parameterType="java.lang.Integer" >
    update wardrobe
    <set >
      status = 0,
      rend_wardrobe_log_id=null,
      member_id = null,
      start_time=null
    </set>
    where member_id = #{memberId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xidian.meiping.entity.Wardrobe" >
    update wardrobe
    set name = #{name,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      rend_wardrobe_log_id = #{rendWardrobeLogId,jdbcType=INTEGER},
      member_id = #{memberId,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE},
      start_time = #{startTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>