<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xidian.meiping.dao.SellingLogMapper" >
  <resultMap id="BaseResultMap" type="com.xidian.meiping.entity.SellingLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="good_id" property="goodId" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="selling_type" property="sellingType" jdbcType="INTEGER" />
    <result column="selling_price" property="sellingPrice" jdbcType="DOUBLE" />
    <result column="selling_time" property="sellingTime" jdbcType="TIMESTAMP" />
    <result column="account" property="account" jdbcType="DOUBLE" />
    <result column="operater_id" property="operaterId" jdbcType="INTEGER" />
    <!--总价-->
    <result column="total_amount" property="totalAmount" jdbcType="INTEGER" />
    <result column="good_name" property="goodName" jdbcType="VARCHAR" />
    <result column="operater_name" property="operaterName" jdbcType="VARCHAR" />
    <result column="member_name" property="memberName" jdbcType="VARCHAR" />
    <result column="credit" property="credit" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, good_id, member_id, number, selling_type, selling_price, selling_time, account,
    operater_id
  </sql>
  <sql id="Base_Column_List_Sp" >
    selling_time,good_id,good.name as good_name,selling_log.selling_price,
    selling_log.number,operater_id,employee.name as operater_name,
    selling_log.selling_price*selling_log.number as total_amount,
    member.name as member_name,selling_log.member_id,good.credit as credit
  </sql>
  <select id="selectByMemberId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List_Sp" />
    from selling_log,good,employee,member
    where employee.id = selling_log.operater_id and
    good.id = selling_log.good_id and
    member.id = selling_log.member_id and
    selling_log.member_id = #{memberId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List_Sp" />
    from selling_log,good,employee,member
    where employee.id = selling_log.operater_id and
    good.id = selling_log.good_id and
    member.id = selling_log.member_id and
    selling_log.selling_type = #{type,jdbcType=INTEGER}
  </select>
  <select id="searchByDate" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List_Sp" />
    from selling_log,employee,good,member
    where DATE_FORMAT(selling_log.selling_time,'%Y-%m-%d')
    BETWEEN #{date1,jdbcType=VARCHAR}
    and #{date2,jdbcType=VARCHAR}
    and good.id = selling_log.good_id
    and employee.id = selling_log.operater_id
    and selling_log.selling_type = #{type,jdbcType=INTEGER}
    and member.id = selling_log.member_id
    <if test="goodId != null" >
      and selling_log.good_id = #{goodId,jdbcType=INTEGER}
    </if>
    <if test="operaterId != null" >
      and selling_log.operater_id = #{operaterId,jdbcType=INTEGER}
    </if>
    <if test="memberId != null" >
      and selling_log.member_id = #{memberId,jdbcType=INTEGER}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List_Sp" />
    from selling_log,good,employee,member
    where employee.id = selling_log.operater_id and
    good.id = selling_log.good_id and
    member.id = selling_log.member_id and
    selling_log.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from selling_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByMemberId" parameterType="java.lang.Integer" >
    delete from selling_log
    where member_id = #{memberId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xidian.meiping.entity.SellingLog"
          useGeneratedKeys="true" keyProperty="id">
    insert into selling_log (id, good_id, member_id, 
      number, selling_type, selling_price, 
      selling_time, account, operater_id
      )
    values (#{id,jdbcType=INTEGER}, #{goodId,jdbcType=INTEGER}, #{memberId,jdbcType=INTEGER}, 
      #{number,jdbcType=INTEGER}, #{sellingType,jdbcType=INTEGER}, #{sellingPrice,jdbcType=DOUBLE}, 
      #{sellingTime,jdbcType=TIMESTAMP}, #{account,jdbcType=DOUBLE}, #{operaterId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xidian.meiping.entity.SellingLog" >
    insert into selling_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="goodId != null" >
        good_id,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="sellingType != null" >
        selling_type,
      </if>
      <if test="sellingPrice != null" >
        selling_price,
      </if>
      <if test="sellingTime != null" >
        selling_time,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="operaterId != null" >
        operater_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="goodId != null" >
        #{goodId,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="sellingType != null" >
        #{sellingType,jdbcType=INTEGER},
      </if>
      <if test="sellingPrice != null" >
        #{sellingPrice,jdbcType=DOUBLE},
      </if>
      <if test="sellingTime != null" >
        #{sellingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="account != null" >
        #{account,jdbcType=DOUBLE},
      </if>
      <if test="operaterId != null" >
        #{operaterId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xidian.meiping.entity.SellingLog" >
    update selling_log
    <set >
      <if test="goodId != null" >
        good_id = #{goodId,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="sellingType != null" >
        selling_type = #{sellingType,jdbcType=INTEGER},
      </if>
      <if test="sellingPrice != null" >
        selling_price = #{sellingPrice,jdbcType=DOUBLE},
      </if>
      <if test="sellingTime != null" >
        selling_time = #{sellingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=DOUBLE},
      </if>
      <if test="operaterId != null" >
        operater_id = #{operaterId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xidian.meiping.entity.SellingLog" >
    update selling_log
    set good_id = #{goodId,jdbcType=INTEGER},
      member_id = #{memberId,jdbcType=INTEGER},
      number = #{number,jdbcType=INTEGER},
      selling_type = #{sellingType,jdbcType=INTEGER},
      selling_price = #{sellingPrice,jdbcType=DOUBLE},
      selling_time = #{sellingTime,jdbcType=TIMESTAMP},
      account = #{account,jdbcType=DOUBLE},
      operater_id = #{operaterId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>